package arrangementRecommendation;

import sbnz.domain.Arrangement;
import sbnz.domain.ArrangementGrade;
import sbnz.service.ArrangementRecommendationService;
import sbnz.dto.ArrangementHomepageRecommendationDTO;
import java.util.List;
import java.time.LocalDate;

global ArrangementRecommendationService recommendations;

rule "Novo"
    agenda-group "novo"
    when
        $a: Arrangement($a.isNew())
    then
        recommendations.addArrangement($a, "new");
end

rule "Pirson"
    agenda-group "pirson"
    when
        $a: Arrangement($a.getPrice() > 500)
    then
        recommendations.addArrangement($a, "pirson");
end

rule "Slicnost"
    agenda-group "slicnost"
    when
        $a: Arrangement($a.getPrice() > 500)
    then
        recommendations.addArrangement($a, "slicnost");
end

rule "Preferenca"
    agenda-group "preferenca"
    when
        $a: Arrangement($a.getPrice() > 1000)
    then
        recommendations.addArrangement($a, "preferenca");
end

rule "Izbaci nove aranzmane bez bodova i izracunaj filter ocene"
    agenda-group "filter bez bodova"
    when
        $a: ArrangementHomepageRecommendationDTO($tags: tags) from recommendations.arrangements
        eval(!($tags.contains("pirson") || $tags.contains("slicnost") || $tags.contains("preferenca")))
    then
        recommendations.removeArrangement($a);
        recommendations.countGrades();
end

rule "Filter by grade 3"
    agenda-group "filterByGrade3New"
    when
        $s: ArrangementRecommendationService($s.getSizeByGrade(3) > 20, $arrangements: getArrangements())
        $a: ArrangementHomepageRecommendationDTO(!tags.contains("new") && filterGrade==3) from $arrangements
    then
        modify($s){removeArrangement($a)}
end

rule "Filter by grade 2"
    agenda-group "filterByGrade2New"
    when
        $s: ArrangementRecommendationService($s.getSizeByGrade(2) > 20, $arrangements: getArrangements())
        $a: ArrangementHomepageRecommendationDTO(!tags.contains("new") && filterGrade==2) from $arrangements
    then
        modify($s){removeArrangement($a)}
end

rule "Filter by grade 1"
    agenda-group "filterByGrade1New"
    when
        $s: ArrangementRecommendationService($s.getSizeByGrade(1) > 20, $arrangements: getArrangements())
        $a: ArrangementHomepageRecommendationDTO(!tags.contains("new") && filterGrade==1) from $arrangements
    then
        modify($s){removeArrangement($a)}
end

rule "Filter by grade 1 final"
    agenda-group "filterByGrade1Final"
    when
        $s: ArrangementRecommendationService($s.size() > 20, $arrangements: getArrangements())
        $a: ArrangementHomepageRecommendationDTO(filterGrade==1) from $arrangements
    then
        modify($s){removeArrangement($a)}
end

rule "Filter by grade 2 final"
    agenda-group "filterByGrade2Final"
    when
        $s: ArrangementRecommendationService($s.size() > 20, $arrangements: getArrangements())
        $a: ArrangementHomepageRecommendationDTO(filterGrade==2) from $arrangements
    then
        modify($s){removeArrangement($a)}
end






